-- 06.04.2018 10:20:32 AR V1.0a

generic = {
  name = 'Redis INCRBY function',
  parameter = {
    name = 'a:a'
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setInputPinName(1, self.parameter.name)
    block.setOutputsPinCount(1)
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, [[
Increments the number stored at key by the input value.
The input value is converted to integer (math.floor).
Increment is done every simulation step, so it acts like an integrator.
If the key does not exist, it is set to 0 before performing the operation
]])
    gui.add('Edit', 'EditName', 'Variable name')
    gui.set('EditName', 'Text', self.parameter.name)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.name = gui.get('EditName', 'Text')
    block.setInputPinName(1, self.parameter.name)
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar{
      Type = 0x00,
      CenterDrawSource =
        'draw.setColorA(0.63, 0.10, 0.06) draw.polygon(15, 5, 20, 7, 20, 13, 15, 15, 10,13, 10, 7)' ..
        'draw.setColorA(1, 1, 1) draw.line(12, 7, 14, 7) draw.line(14, 6, 16, 6) draw.line(14, 8, 16, 8)'
    }
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
        end

        block.step = function(a)
          return block.parent.redis.client:incrby('NAME', math.floor(a))
        end

        block.stop = function()
        end

        return block
      ]==]
    local replaces = {
      ['NAME'] = self.parameter.name,
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

