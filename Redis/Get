-- 06.04.2018 10:14:39 AR V1.0a
-- 15.10.2018 08:18:58 AR V1.0b Add resolve
-- 25.04.2020 06:57:54 AR V1.0c Outpt datatypes 'nil', 'boolean', 'number', 'string'

generic = {
  name = 'Redis GET function',
  parameter = {
    name = 'a:a'
  },

  init = function(self)
    block.setInputsPinCount(0)
    block.setOutputsPinCount(1)
    block.setOutputPinTypeRestrains(1, 'nil', 'boolean', 'number', 'string')
    block.setOutputPinName(1, self.parameter.name)
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, [[
Get the value of key.
If the key does not exist the special value nil is returned.
An error is returned if the value stored at key is not a string,
because GET only handles string values.]])
    gui.add('Edit', 'EditName', 'Variable name')
    gui.set('EditName', 'Text', self.parameter.name)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.name = gui.get('EditName', 'Text')
    block.setOutputPinName(1, self.parameter.name)
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar{
      Type = 0x00,
      CenterDrawSource =
        'draw.setColorA(0.63, 0.10, 0.06) draw.polygon(15, 5, 20, 7, 20, 13, 15, 15, 10,13, 10, 7)' ..
        'draw.setColorA(1, 1, 1) draw.line(12, 7, 14, 7) draw.line(14, 6, 16, 6) draw.line(14, 8, 16, 8)'
    }
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
        end

        block.step = function()
          return block.parent.redis.resolve(block.parent.redis.client:get('NAME'))
        end

        block.stop = function()
        end

        return block
      ]==]
    local replaces = {
      ['NAME'] = self.parameter.name,
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

