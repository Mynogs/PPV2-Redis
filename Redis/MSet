-- 07.04.2018 11:38:34 AR V1.0a

generic = {
  name = 'Redis MGET function',
  parameter = {
    names = 'a:a\na:b\n'
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setOutputsPinCount(0)
    block.setInputPinTypeRestrains(1, 'table')
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, [[
Returns the values of all specified keys.
For every key that does not hold a string value or does not exist,
the special value nil is returned.
]])
    gui.add('Memo', 'MemoNames', 'Names', {Height = 200, RemoveEmptyLines = true})
    gui.set('MemoNames', 'Text', self.parameter.names)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.names = gui.get('MemoNames', 'Text')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar{
      Type = 0x00,
      CenterDrawSource =
        'draw.setColorA(0.63, 0.10, 0.06) draw.polygon(15, 5, 20, 7, 20, 13, 15, 15, 10,13, 10, 7)' ..
        'draw.setColorA(1, 1, 1) draw.line(12, 7, 14, 7) draw.line(14, 6, 16, 6) draw.line(14, 8, 16, 8)'
    }
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
        end

        block.step = function(a)

          return block.parent.redis.client:mset({NAMES})
        end

        block.stop = function()
        end

        return block
      ]==]
    local names = ''
    local i = 1
    for token in self.parameter.names:gmatch('([^%c]*)\n') do
      names = names .. '["' .. token .. '"] = tostring(a[' .. i .. ']), '
      i = i + 1
    end
    local replaces = {
      ['NAMES'] = names
    }
    return string.gsub(source, '%a+', replaces)
  end,

}














